# extract the current file with the right command
cmd extract ${{
    set -f
    ext_dir="${f%.*}" # filename without extension
    mkdir $ext_dir
    cd $ext_dir
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "\n$fx"
    printf "\nDelete selected file(s)?[y/n] "
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# custom open command
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
        text/*|application/json|inode/x-empty|application/x-subrip) $EDITOR $fx ;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/gif) setsid -f mpv $f >/dev/null 2>&1 ;;
	image/*) setsid -f sxiv $fx >/dev/null 2>&1 ;;
	audio/*|video/x-ms-asf) mpv --audio-display=no $f >/dev/null 2>&1 ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd.djvu|application/epub*|application/vnd.comicbook*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) $EDITOR $fx ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

# drag to other programs
cmd dragon %dragon $fx
cmd dragon-all %dragon -a -x $fx

# change permissions
cmd chmod ${{
  printf "\nMode bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

# create new file or directory
# cmd touch ${{
#     set -f
#     printf "create new [f]ile/[d]irectory? "
#     read ans
#     case $ans in
#         "f")
#             printf "new file name: "
#             read name
#             touch $name;;
#         "d")
#             printf "new directory name: "
#             read name
#             mkdir $name;;
#     esac
# }}

# create new file
cmd newfile ${{
    set -f
    printf "\nNew file name: "
    read name
    [ -n $name ] && touch $name
}}

# create new directory
cmd newdir ${{
    set -f
    printf "\nNew directory name: "
    read name
    [ -n $name ] && mkdir $name
}}

# upload files to 0x0.st
cmd share ${{
    curl -F"file=@$fx" https://0x0.st | xclip -selection clipboard
    lf -remote 'send echo "Shared file(s) link copied!"'
}}
