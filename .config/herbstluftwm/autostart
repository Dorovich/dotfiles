#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#151515'

# set hostname vars
case "$(hostname)" in
    "raspinet")
        is_raspi=1
        is_laptop=0
        ;;
    "Ness-net")
        is_raspi=0
        is_laptop=1
        ;;
    *)
        is_raspi=0
        is_laptop=0
        ;;
esac

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
# Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close_and_remove
hc keybind $Mod-Shift-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-Return spawn urxvtc
if [ -f "/usr/share/doc/help_hlwm.txt" ]; then
    hc keybind $Mod-F1 spawn "${TERMINAL:-xterm}" -e less /usr/share/doc/help_hlwm.txt
fi

# programs
hc keybind $Mod-d      spawn dmenu_run -h 16 -c -g 3 -l 10
hc keybind $Mod-e      spawn run_or_raise class Emacs emacsclient -c -a 'emacs'
hc keybind $Mod-a      spawn pcmanfm
hc keybind $Mod-v      spawn urxvtc -e vim
hc keybind $Mod-Escape spawn slock
if [ $is_raspi -eq 0 ]; then
    hc keybind $Mod-b       spawn run_or_raise class Firefox firefox
    hc keybind $Mod-Shift-b spawn run_or_raise class Chromium-browser chromium-browser
else
    hc keybind $Mod-b       spawn run_or_raise class Chromium-browser chromium-browser
fi

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       chain . split bottom 0.5 . focus down
hc keybind $Mod-o       chain . split right 0.5 . focus right
hc keybind $Mod-Shift-u chain . split bottom 0.5 . shift down
hc keybind $Mod-Shift-o chain . split right 0.5 . shift right
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
# hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space \
    or , and . compare tags.focus.curframe_wcount = 2 \
             . cycle_layout +1 vertical horizontal max vertical grid \
       , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# scripts
# https://github.com/herbstluftwm/herbstluftwm/blob/master/scripts/keychain.sh
scriptmanager="scriptctl"
keys=( x m o p s k l i q )
unbind=( )
for k in "${keys[@]}" Escape ; do
    unbind+=( , keyunbind "$k" )
done

hc keybind $Mod-x chain \
    . keybind "${keys[0]}" chain "${unbind[@]}" , spawn "$scriptmanager" \
    . keybind "${keys[1]}" chain "${unbind[@]}" , spawn "$scriptmanager" music \
    . keybind "${keys[2]}" chain "${unbind[@]}" , spawn "$scriptmanager" sinks \
    . keybind "${keys[3]}" chain "${unbind[@]}" , spawn "$scriptmanager" pass \
    . keybind "${keys[4]}" chain "${unbind[@]}" , spawn "$scriptmanager" scrot \
    . keybind "${keys[5]}" chain "${unbind[@]}" , spawn "$scriptmanager" kill \
    . keybind "${keys[6]}" chain "${unbind[@]}" , spawn "$scriptmanager" steamapp \
    . keybind "${keys[7]}" chain "${unbind[@]}" , spawn "$scriptmanager" snippet load \
    . keybind "${keys[8]}" chain "${unbind[@]}" , spawn "$scriptmanager" quit \
    . keybind Escape       chain "${unbind[@]}"

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set show_frame_decorations 'focused_if_multiple'
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap 4

hc attr theme.title_height 15
hc attr theme.title_when always
hc attr theme.title_font 'Terminus:pixelsize=12'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.title_depth 3  # space below the title's baseline
hc attr theme.active.color '#345F0C'
hc attr theme.title_color '#ffffff'
hc attr theme.normal.color '#323232'
hc attr theme.urgent.color '#7811A1'
hc attr theme.tab_color '#1F1F1F'
# hc attr theme.active.tab_color '#2B4F0A'
# hc attr theme.active.tab_outer_color '#6C8257'
# hc attr theme.active.tab_title_color '#ababab'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.tiling.outer_width 1
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0
hc set default_frame_layout max

# ensure default layout is set
hc substitute ALGO settings.default_frame_layout \
    foreach T tags.by-name. \
    sprintf ATTR '%c.tiling.root.algorithm' T \
    set_attr ATTR ALGO

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule floatplacement=smart
hc rule floatplacement=center
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole|[Ss]t)' focus=on floating=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on
hc rule class~'.*-prompter|.*\.exe|scratchpad' floating=on
hc rule windowrole='GtkFileChooserDialog' floating=on
hc rule class~'[Dd]ragon|.*[Ss]xiv|[Mm]pv|[Aa]n-anime-game-launcher' floating=on
hc rule class='GLFW-Application' floating=on
hc rule class='Emacs' floating=on
hc rule class~'SDL Application|steam' not title='Steam' floating=on
#hc rule class='steam' not title='Steam' floating=on
hc rule class='qemacs' floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done

# wallpaper
nitrogen --restore

# run once
if hc silent new_attr bool my_not_first_autostart ; then
    wmname herbstluftwm
    xmodmap ~/.xmodmap
    setxkbmap -option caps:ctrl_modifier
    urxvtd -q -o -f
fi
